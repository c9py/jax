# CI - Bazel CUDA tests (Non-RBE)
#
# This workflow runs the CUDA tests with Bazel. It can only be triggered by other workflows via
# `workflow_call`. It is used by the `CI - Wheel Tests (Continuous)` and
# `CI - Wheel Tests (Nightly/Release)` workflows to run the Bazel CUDA tests.
#
# It consists of the following job:
# run-tests:
#    - Downloads the jaxlib and CUDA artifacts from a GCS bucket if build_jaxlib is `false`.
#       Otherwise, the artifacts are built from source.
#    - Executes the `run_bazel_test_cuda_non_rbe.sh` script, which performs the following actions:
#      - `build_jaxlib=wheel`: Runs the Bazel CPU tests with py_import dependencies.
#        `build_jaxlib=false`: Runs the Bazel CPU tests with downloaded wheel dependencies.

name: CI - Bazel CUDA tests (Non-RBE)

on:
  workflow_call:
    inputs:
      runner:
        description: "Which runner should the workflow run on?"
        type: string
        default: "linux-x86-n4-16"
      python:
        description: "Which python version to test?"
        type: string
        default: "3.12"
      cuda-version:
        description: "Which CUDA version to test?"
        type: string
        default: "12"
      enable-x64:
        description: "Should x64 mode be enabled?"
        type: string
        default: "0"
      jaxlib-version:
        description: "Which jaxlib version to test? (head/pypi_latest)"
        type: string
        default: "head"
      clone_main_xla:
        description: "Should latest XLA be used?"
        type: string
        default: "0"
      run-backend_independent-test-suite:
        description: "Should the backend independent test suite be run?"
        type: string
        default: "1"
      gcs_download_uri:
        description: "GCS location URI from where the artifacts should be downloaded"
        default: 'gs://general-ml-ci-transient/jax-github-actions/jax/${{ github.workflow }}/${{ github.run_number }}/${{ github.run_attempt }}'
        type: string
      build_jaxlib:
        description: 'Should jaxlib be built from source?'
        required: false
        default: 'false'
        type: string
      halt-for-connection:
        description: 'Should this workflow run wait for a remote connection?'
        type: string
        default: 'no'
permissions: {}
jobs:
  run-tests:
    defaults:
      run:
        # Explicitly set the shell to bash
        shell: bash
    runs-on: ${{ inputs.runner }}
    container: "us-docker.pkg.dev/ml-oss-artifacts-published/ml-public-container/ml-build:latest"

    env:
      JAXCI_HERMETIC_PYTHON_VERSION: ${{ inputs.python }}
      JAXCI_ENABLE_X64: ${{ inputs.enable-x64 }}
      JAXCI_CUDA_VERSION: ${{ inputs.cuda-version }}
      # Enable writing to the Bazel remote cache bucket.
      JAXCI_WRITE_TO_BAZEL_REMOTE_CACHE: "1"
      JAXCI_CLONE_MAIN_XLA: "${{ inputs.clone_main_xla }}"
      JAXCI_BUILD_JAXLIB: ${{ inputs.build_jaxlib }}
      JAXCI_RUN_BACKEND_INDEPENDENT_TESTS: "${{ inputs.run-backend_independent-test-suite }}"

    name: "jaxlib=${{ inputs.jaxlib-version }},
          ${{ (contains(inputs.runner, 'h100') && 'h100') ||
          (contains(inputs.runner, 'b200') && 'b200') ||
          (contains(inputs.runner, 'l4') && 'l4') }}, py ${{ inputs.python }}, cuda ${{ inputs.cuda-version }}, x64=${{ inputs.enable-x64 }}"

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Download JAX CUDA wheels
        if: inputs.build_jaxlib == 'false'
        uses: ./.github/actions/download-jax-cuda-wheels
        with:
          python: ${{ inputs.python }}
          cuda-version: ${{ inputs.cuda-version }}
          download-jax-only-from-gcs: ${{ inputs.download-jax-only-from-gcs }}
          jaxlib-version: ${{ inputs.jaxlib-version }}
          gcs_download_uri: ${{ inputs.gcs_download_uri }}
      # Halt for testing
      - name: Wait For Connection
        uses: google-ml-infra/actions/ci_connection@7f5ca0c263a81ed09ea276524c1b9192f1304e3c
        with:
          halt-dispatch-input: ${{ inputs.halt-for-connection }}
      - name: "Bazel non-RBE CUDA tests with build_jaxlib=${{ format('{0}', inputs.build_jaxlib) }}"
        timeout-minutes: 60
        run: ./ci/run_bazel_test_cuda_non_rbe.sh
